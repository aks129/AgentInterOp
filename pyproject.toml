[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "multi-agent-interoperability-demo"
version = "1.0.0"
description = "A multi-agent interoperability demo with A2A and MCP protocol support"
readme = "README.md"
authors = [
    {name = "Multi-Agent Demo Team", email = "demo@example.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Communications",
]
keywords = [
    "multi-agent",
    "interoperability", 
    "a2a",
    "mcp",
    "agents",
    "protocols",
    "healthcare",
    "eligibility"
]
requires-python = ">=3.11"
dependencies = [
    "flask>=2.3.0",
    "flask-socketio>=5.3.0",
    "python-socketio>=5.8.0",
    "python-engineio>=4.7.0",
    "eventlet>=0.33.0",
    "requests>=2.31.0",
    "python-dateutil>=2.8.0",
    "pydantic>=2",
    "sse-starlette>=3.0.2",
    "jinja2>=3.1.6",
    "fastapi>=0.116.1",
    "uvicorn[standard]>=0.35.0",
    "httpx>=0.28.1",
    "anthropic>=0.66.0",
    "python-dotenv>=1.1.1",
    "python-multipart>=0.0.20",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0"
]

[project.urls]
Homepage = "https://github.com/example/multi-agent-interoperability-demo"
Documentation = "https://github.com/example/multi-agent-interoperability-demo#readme"
Repository = "https://github.com/example/multi-agent-interoperability-demo.git"
"Bug Tracker" = "https://github.com/example/multi-agent-interoperability-demo/issues"

[project.scripts]
multi-agent-demo = "app.main:main"

[tool.setuptools]
package-dir = {"" = "."}
packages = ["app", "app.protocols", "app.agents", "app.eligibility", "app.store", "app.web"]

[tool.setuptools.package-data]
"app.data" = ["**/*.json"]
"app.cards" = ["*.json"]
"app.web.templates" = ["*.html"]
"app.web.static" = ["*.js", "*.css"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | node_modules
)/
'''

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["app"]
skip_glob = ["*/migrations/*"]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "E501", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    ".tox"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=app",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--strict-markers",
    "-ra"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
